{"version":3,"sources":["../../../../src/infrastructure/shopify/queries/product.ts","../../../../src/infrastructure/shopify/fragment/image.ts","../../../../src/infrastructure/shopify/fragment/product.ts"],"sourcesContent":["import productFragment from '../fragment/product';\n\nexport const getProductQuery = /* GraphQL */ `\n  query getProduct($handle: String!) {\n    product(handle: $handle) {\n      ...product\n    }\n  }\n  ${productFragment}\n`;\n\n// export const getProductsQuery = /* GraphQL */ `\n//   query getProducts($sortKey: ProductSortKeys, $reverse: Boolean, $query: String) {\n//     products(sortKey: $sortKey, reverse: $reverse, query: $query, first: 100) {\n//       edges {\n//         node {\n//           ...product\n//         }\n//       }\n//     }\n//   }\n//   ${productFragment}\n// `;\n\nexport const getProductsQuery = /* GraphQL */ `\nquery {\n  products(first: 10, reverse: true) {\n    edges {\n      node {\n        id\n        title\n        handle\n        resourcePublicationOnCurrentPublication {\n          publication {\n            name\n            id\n          }\n          publishDate\n          isPublished\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const getProductRecommendationsQuery = /* GraphQL */ `\n  query getProductRecommendations($productId: ID!) {\n    productRecommendations(productId: $productId) {\n      ...product\n    }\n  }\n  ${productFragment}\n`;\n","const imageFragment = /* GraphQL */ `\n  fragment image on Image {\n    url\n    altText\n    width\n    height\n  }\n`;\n\nexport default imageFragment;\n","import imageFragment from './image';\n\nconst productFragment = /* GraphQL */ `\n  fragment product on Product {\n    id\n    handle\n    availableForSale\n    title\n    description\n    descriptionHtml\n    options {\n      id\n      name\n      values\n    }\n    priceRange {\n      maxVariantPrice {\n        amount\n        currencyCode\n      }\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    variants(first: 250) {\n      edges {\n        node {\n          id\n          title\n          availableForSale\n          selectedOptions {\n            name\n            value\n          }\n          price {\n            amount\n            currencyCode\n          }\n        }\n      }\n    }\n    featuredImage {\n      ...image\n    }\n    images(first: 20) {\n      edges {\n        node {\n          ...image\n        }\n      }\n    }\n    tags\n    updatedAt\n  }\n  ${imageFragment}\n`;\n\nexport default productFragment;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAM;AAAA;AAAA,EAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASpC,IAAO,gBAAQ;;;ACPf,IAAM;AAAA;AAAA,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqDlC,aAAa;AAAA;AAAA;AAGjB,IAAO,kBAAQ;;;AFxDR,IAAM;AAAA;AAAA,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMzC,eAAe;AAAA;AAAA;AAgBZ,IAAM;AAAA;AAAA,EAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBvC,IAAM;AAAA;AAAA,EAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMxD,eAAe;AAAA;AAAA;","names":[]}