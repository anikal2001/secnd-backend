{"version":3,"sources":["../../../src/api/middleware/password.middleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport bcrypt from 'bcrypt';\n\nexport const hashPassword = async (req: Request, res: Response, next: NextFunction) => {\n  const { password }: { password: string } = req.body;\n  const salt: string = await bcrypt.genSalt(10);\n  const hashedPassword: string = await bcrypt.hash(password, salt);\n  req.body.password = hashedPassword;\n  next();\n};\n\nconst comparePassword = async (hashedPassword: string, userPassword: string) => {\n  return new Promise<null>(async (resolve, reject) => {\n    const passwordResp: Error | boolean = await bcrypt.compare(userPassword, hashedPassword);\n\n    if (typeof passwordResp === 'boolean') {\n      reject('Error while comparing passwords.');\n      return;\n    } else if (passwordResp == false) {\n      reject(new Error('Invalid credentials.'));\n    } else {\n      resolve(null);\n    }\n  });\n};\n"],"mappings":";AACA,OAAO,YAAY;AAEZ,IAAM,eAAe,OAAO,KAAc,KAAe,SAAuB;AACrF,QAAM,EAAE,SAAS,IAA0B,IAAI;AAC/C,QAAM,OAAe,MAAM,OAAO,QAAQ,EAAE;AAC5C,QAAM,iBAAyB,MAAM,OAAO,KAAK,UAAU,IAAI;AAC/D,MAAI,KAAK,WAAW;AACpB,OAAK;AACP;","names":[]}